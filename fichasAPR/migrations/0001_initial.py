# Generated by Django 4.2.3 on 2023-07-19 07:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Abastecimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_plantilla', models.CharField(blank=True, max_length=100)),
                ('frecuencia_camion_aljibe', models.CharField(blank=True, max_length=50)),
                ('volumen_camion_aljibe', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('informacion_general', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bombas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_bomba', models.CharField(max_length=100)),
                ('potencia_hp', models.IntegerField(blank=True, null=True)),
                ('marca', models.CharField(blank=True, max_length=50)),
                ('tipo', models.CharField(blank=True, max_length=50)),
                ('q_medida', models.CharField(blank=True, max_length=50)),
                ('sistema', models.CharField(blank=True, max_length=50)),
                ('volumen', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('informacion_general', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='InformacionAdministrativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plantilla_informacion_administrativa', models.CharField(max_length=100)),
                ('numero_arranques', models.IntegerField(blank=True, null=True)),
                ('estado_general', models.CharField(blank=True, max_length=50)),
                ('estado_regulacion', models.CharField(blank=True, max_length=50)),
                ('estado_distribucion', models.CharField(blank=True, max_length=50)),
                ('informacion_administrativa', models.TextField()),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InformacionAPR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_comite', models.CharField(blank=True, max_length=100)),
                ('sector_apr', models.CharField(blank=True, max_length=50)),
                ('comuna_apr', models.CharField(blank=True, max_length=50)),
                ('nombre_presidente', models.CharField(max_length=100)),
                ('telefono_presidente', models.CharField(blank=True, max_length=20)),
                ('correo_presidente', models.EmailField(blank=True, max_length=254)),
                ('nombre_tesorero', models.CharField(blank=True, max_length=100)),
                ('telefono_tesorero', models.CharField(blank=True, max_length=20)),
                ('correo_tesorero', models.EmailField(blank=True, max_length=254)),
                ('nombre_secretario', models.CharField(blank=True, max_length=100)),
                ('telefono_secretario', models.CharField(blank=True, max_length=20)),
                ('correo_secretario', models.EmailField(blank=True, max_length=254)),
                ('informacion_abastecimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.abastecimiento')),
                ('informacion_administrativa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.informacionadministrativa')),
            ],
        ),
        migrations.CreateModel(
            name='InformacionSuministro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_plantilla', models.CharField(blank=True, max_length=100)),
                ('tipo_suministro', models.CharField(blank=True, max_length=50)),
                ('numero_tramo', models.IntegerField(blank=True, null=True)),
                ('valor_tramos', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Red',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_red', models.CharField(max_length=100)),
                ('longitud_red', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('densidad_red', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('material', models.CharField(blank=True, max_length=50)),
                ('diametro_sistema_distribucion', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='MiAPR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('informacion_apr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.informacionapr')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InformacionSuministroElectrico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_informacion_suministro', models.CharField(max_length=100)),
                ('paneles_solares', models.BooleanField()),
                ('generador', models.BooleanField()),
                ('tipo_energia', models.CharField(blank=True, max_length=50)),
                ('material', models.CharField(blank=True, max_length=50)),
                ('informacion_red_distribucion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.red')),
            ],
        ),
        migrations.CreateModel(
            name='InformacionPozos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plantilla_informacion_pozos', models.CharField(blank=True, max_length=100)),
                ('tipos_pozos', models.CharField(blank=True, max_length=50)),
                ('profundidad_pozos', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('diametro_pozo', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('materialidad_pozo', models.CharField(blank=True, max_length=50)),
                ('causalidad_pozo', models.CharField(blank=True, max_length=50)),
                ('estado_pozo', models.CharField(blank=True, max_length=50)),
                ('informacion_abastecimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.abastecimiento')),
                ('informacion_suministro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.informacionsuministro')),
            ],
        ),
        migrations.CreateModel(
            name='InformacionDistribucionTarifa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_plantilla', models.CharField(max_length=100)),
                ('planos', models.FileField(blank=True, upload_to='planos/')),
                ('pruebas_bombeo', models.FileField(blank=True, upload_to='pruebas_bombeo/')),
                ('diseño_tratamiento', models.FileField(blank=True, upload_to='diseño_tratamiento/')),
                ('muestra_nch409_1', models.FileField(blank=True, null=True, upload_to='muestra_nch409_1/')),
                ('muestra_nch409_2', models.FileField(blank=True, null=True, upload_to='muestra_nch409_2/')),
                ('informacion_extra', models.TextField()),
                ('bombas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.bombas')),
                ('red', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.red')),
            ],
        ),
        migrations.AddField(
            model_name='informacionapr',
            name='informacion_distribucion_tarifa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fichasAPR.informaciondistribuciontarifa'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(max_length=100)),
                ('rut', models.CharField(max_length=12)),
                ('correo', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=20)),
                ('rol_usuario', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
